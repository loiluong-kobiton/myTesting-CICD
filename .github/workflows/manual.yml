# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'test run yarn test'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

      test-file:
        description: 'Test file '
        default: 'empty'
        required: false
        type: string
      
      node-version:
        description: 'Node version'
        default: '16.x'
        type: choice
        options:
          - 16.x
          - 14.x
          - 18.x


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
      - name: Send greeting
        run: echo "Hello ${{ inputs.name }}"

      



  node:
    runs-on: ubuntu-latest
    # permissions:
    #   checks: write
    #   pull-requests: write
    #   contents: write
    steps:
      - name: Clone repo (Latest)
        uses: actions/checkout@v3

      - name: Install Node.js ${{ inputs.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ github.event.inputs.node-version}}
      
      - name: check coverage
        uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          test-script: yarn jest

      # - name: test yarn
      #   run: |
      #     yarn add --dev jest
      #     yarn install
      #     yarn jest --coverage --json --outputFile=/home/runner/work/_actions/mattallty/jest-github-action/v1/dist/jest.results.json

      # - name: check coverage
      #   uses: mattallty/jest-github-action@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     test-command: "yarn test"
      