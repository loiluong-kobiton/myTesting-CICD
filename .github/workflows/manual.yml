name: test and get result on commit
on:
  workflow_dispatch:
    inputs:
      node-version:
        description: 'Node version'
        required: false
        type: string
        default: 14.x
  
  push:
    branches:
      - main

  pull_request:
    types:
      - opened
    branches:
      - main


jobs:
  greet:
    runs-on: ubuntu-latest
    steps:
      - name: Send greeting
        run: echo "Hello this is testing install and test Node.js ${{ github.event.inputs.node-version }}"

  test:
    name: Yarn test
    # if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
      contents: write
    steps:
      - name: Clone Repository (Latest)
        uses: actions/checkout@v3

      - name: Install Node.js ${{ github.event.inputs.node-version || '14.x' }}
        id: install-node-manually
        uses: actions/setup-node@v3
        with:
          node-version: ${{ github.event.inputs.node-version || '14.x' }}
      


      - name: Install dependencies
        run: |
          echo "Install node status: ${{ steps.install.outcome }}"
          npm install --global yarn
          npm install
          


      # - uses: jwalton/gh-find-current-pr@v1
      #   id: findPr


      - name: check coverage
        id: coverage
        continue-on-error: true
        uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          # package-manager: yarn
          test-script: yarn test
          output: comment, report-markdown
          # skip-step: install
          # prnumber: ${{ steps.findPr.outputs.number }}

      # - name: Create commit comment
      #   uses: peter-evans/commit-comment@v2
      #   continue-on-error: true
      #   # if: steps.coverage.outcome == 'failure'
      #   with:
      #     body: "this is the report ${{ steps.coverage.outputs.report }}"
         


      - name: echo Coverage status
        run: |
          echo ${{ steps.coverage.outcome }}
          npm install eslint eslint-plugin-standard eslint-config-standard --save-dev

       
      - name: My Lint Action
        run: yarn lint

      - name: Lint Action 
        uses: wearerequired/lint-action@v2.3.0
        with:
          eslint: true
      
        
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: building step
        run: |
          echo "Hello ${{ github.event.inputs.node-version }}"
          echo "status of test - install node ${{ needs.test.result }}"
      

